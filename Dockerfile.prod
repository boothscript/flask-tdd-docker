### BUILDER ###

FROM python:3.8.1-alpine as builder

RUN apk update && \
    apk add --virtual build-deps gcc python-dev musl-dev&& \
    apk add postgresql-dev && \
    apk add netcat-openbsd

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONNUMBUFFERED 1

RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps -- wheel-dir /usr/src/app/wheels -r requirements.txt

# linting
COPY . /usr/src/app
RUN pip install black flake8 isort
RUN flake8 project
RUN black project
RUN isort project/**/*.py



### FINAL ###

FROM python:3.8.1-alpine

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONNUMBUFFERED 1
ENV FLASK_ENV production
ENV APP_SETTINGS project.config.ProductionConfig

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# install from wheels made in builder
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

COPY . /usr/src/app

# run as no root user
RUN adduser -D myuser
USER myuser

CMD gunicorn --bind 0.0.0.0:$PORT manage:app

